{"ast":null,"code":"// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import axios from \"axios\";\n// import {BrowserRouter as Router,Switch,Route, Redirect } from 'react-router-dom'\n// import AuthAPI from './authAPI';\n// import Cookies from 'js-cookies'\n// function Test(){\n//     const [auth, setAuth]=React.useState(false);\n//     const readCookies=()=>{\n//         const user= Cookies.get('user');\n//          if(user){\n//              setAuth(true);\n//          }\n//     }\n//     React.useEffect(()=>{\n//         readCookies();\n//     },[ ])\n//     return (\n//         <div>\n//             <AuthAPI.Provider value={{auth,setAuth}}>\n//             <h1> Well come</h1>\n//             <Router>\n//                 <Routes/>\n//             </Router>\n//             </AuthAPI.Provider>\n//         </div>\n//     );\n// }\n// const  Login =()=>{\n//     const Auth =React.useContext(AuthAPI)\n//     const handleClick=()=>{\n//         Auth.setAuth(true);\n//         Cookies.set('user','true');\n//     }\n//     return (\n//         <div> \n//             <button onClick={handleClick}> login </button>\n//         </div>\n//     );\n// }\n// const  Dash =()=>{\n//     const Auth =React.useContext(AuthAPI)\n//     const logOut =()=>{\n//         Auth.setAuth(false);\n//         Cookies.remove('user');\n//     }\n//     return (\n//         <div> \n//             <h1> Dash </h1>\n//             <button onClick={logOut}> logout </button>\n//         </div>\n//     );\n// }\n// const Routes=()=>{\n//     const Auth =React.useContext(AuthAPI);\n//     return(\n//         <Switch>\n//             <RedirectLogin path='/login' component={Login} auth={Auth.auth} ></RedirectLogin>\n//             <Protected path='/dash' component={Dash} auth={Auth.auth} ></Protected>\n//         </Switch>\n//     );\n// }\n// const Protected=({component:Component,...rest})=>{\n//     return(\n//        <Route {...rest} \n//        render={()=>auth?(\n//            <Component> </Component>\n//        ):\n//        (\n//            <Redirect to='/login'></Redirect>\n//        )\n//     }\n//        >\n//        </Route>\n//     );\n// }\n// const RedirectLogin=({component:Component,...rest})=>{\n//     return(\n//        <Route {...rest} \n//        render={()=>!auth?(\n//            <Component> </Component>\n//        ):\n//        (\n//            <Redirect to='/login'></Redirect>\n//        )\n//     }\n//        >\n//        </Route>\n//     );\n// }\n// export default Test;","map":{"version":3,"sources":["C:/Users/admin/3D Objects/ReactJS_Hotel/src/test.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import axios from \"axios\";\r\n\r\n\r\n// import {BrowserRouter as Router,Switch,Route, Redirect } from 'react-router-dom'\r\n\r\n// import AuthAPI from './authAPI';\r\n// import Cookies from 'js-cookies'\r\n\r\n// function Test(){\r\n//     const [auth, setAuth]=React.useState(false);\r\n//     const readCookies=()=>{\r\n//         const user= Cookies.get('user');\r\n//          if(user){\r\n//              setAuth(true);\r\n\r\n//          }\r\n//     }\r\n//     React.useEffect(()=>{\r\n//         readCookies();\r\n//     },[ ])\r\n//     return (\r\n//         <div>\r\n//             <AuthAPI.Provider value={{auth,setAuth}}>\r\n//             <h1> Well come</h1>\r\n//             <Router>\r\n//                 <Routes/>\r\n//             </Router>\r\n//             </AuthAPI.Provider>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// const  Login =()=>{\r\n//     const Auth =React.useContext(AuthAPI)\r\n\r\n//     const handleClick=()=>{\r\n//         Auth.setAuth(true);\r\n//         Cookies.set('user','true');\r\n\r\n//     }\r\n//     return (\r\n//         <div> \r\n//             <button onClick={handleClick}> login </button>\r\n//         </div>\r\n//     );\r\n// }\r\n// const  Dash =()=>{\r\n    \r\n//     const Auth =React.useContext(AuthAPI)\r\n//     const logOut =()=>{\r\n//         Auth.setAuth(false);\r\n//         Cookies.remove('user');\r\n//     }\r\n//     return (\r\n//         <div> \r\n//             <h1> Dash </h1>\r\n//             <button onClick={logOut}> logout </button>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// const Routes=()=>{\r\n//     const Auth =React.useContext(AuthAPI);\r\n\r\n\r\n//     return(\r\n//         <Switch>\r\n//             <RedirectLogin path='/login' component={Login} auth={Auth.auth} ></RedirectLogin>\r\n//             <Protected path='/dash' component={Dash} auth={Auth.auth} ></Protected>\r\n//         </Switch>\r\n//     );\r\n// }\r\n\r\n// const Protected=({component:Component,...rest})=>{\r\n//     return(\r\n//        <Route {...rest} \r\n//        render={()=>auth?(\r\n//            <Component> </Component>\r\n//        ):\r\n//        (\r\n//            <Redirect to='/login'></Redirect>\r\n//        )\r\n//     }\r\n//        >\r\n\r\n//        </Route>\r\n//     );\r\n// }\r\n// const RedirectLogin=({component:Component,...rest})=>{\r\n//     return(\r\n//        <Route {...rest} \r\n//        render={()=>!auth?(\r\n//            <Component> </Component>\r\n//        ):\r\n//        (\r\n//            <Redirect to='/login'></Redirect>\r\n//        )\r\n//     }\r\n//        >\r\n\r\n//        </Route>\r\n//     );\r\n// }\r\n// export default Test;"]},"metadata":{},"sourceType":"module"}